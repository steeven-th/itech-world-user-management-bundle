services:
  _defaults:
    autowire: false
    autoconfigure: false
    public: false

  # Repository avec tag explicite
  ItechWorld\UserManagementBundle\Repository\UserRepository:
    arguments: [ '@doctrine' ]
    tags: [ 'doctrine.repository_service' ]

  # Chargement automatique des repositories avec tag
  ItechWorld\UserManagementBundle\Repository\:
    resource: '../src/Repository/'
    arguments: [ '@doctrine' ]
    tags: [ 'doctrine.repository_service' ]

  # State processor avec configuration explicite
  ItechWorld\UserManagementBundle\State\UserPasswordHasher:
    arguments:
      $processor: '@api_platform.doctrine.orm.state.persist_processor'
      $passwordHasher: '@security.user_password_hasher'
    tags: [ 'api_platform.state_processor' ]

  ItechWorld\UserManagementBundle\State\GroupSafeProcessor:
    decorates: 'api_platform.doctrine.orm.state.persist_processor'
    arguments:
      $entityManager: '@doctrine.orm.entity_manager'
      $decorated: '@.inner'
    tags:
      - { name: 'api_platform.state_processor' }

  # Contrôleurs
  ItechWorld\UserManagementBundle\Controller\GroupPermissionsController:
    arguments:
      - '@doctrine.orm.entity_manager'
    calls:
      - [ setContainer, [ '@service_container' ] ]
    tags: [ 'controller.service_arguments' ]
    public: true

  ItechWorld\UserManagementBundle\Controller\GroupsStatsController:
    arguments:
      - '@doctrine.orm.entity_manager'
    calls:
      - [ setContainer, [ '@service_container' ] ]
    tags: [ 'controller.service_arguments' ]
    public: true

  ItechWorld\UserManagementBundle\Controller\PermissionsStatsController:
    arguments:
      - '@doctrine.orm.entity_manager'
    calls:
      - [ setContainer, [ '@service_container' ] ]
    tags: [ 'controller.service_arguments' ]
    public: true

  ItechWorld\UserManagementBundle\Controller\UsernameController:
    arguments:
      - '@ItechWorld\UserManagementBundle\Repository\UserRepository'
    calls:
      - [ setContainer, [ '@service_container' ] ]
    tags: [ 'controller.service_arguments' ]
    public: true

  ItechWorld\UserManagementBundle\Controller\UserPermissionsController:
    arguments:
      - '@doctrine.orm.entity_manager'
    calls:
      - [ setContainer, [ '@service_container' ] ]
    tags: [ 'controller.service_arguments' ]
    public: true

  # Voters de sécurité
  ItechWorld\UserManagementBundle\Security\Voter\GroupRoleVoter:
    arguments:
      $security: '@security.helper'
    tags: [ 'security.voter' ]

  ItechWorld\UserManagementBundle\Security\Voter\PermissionVoter:
    arguments:
      $security: '@security.helper'
      $permissionRepository: '@ItechWorld\UserManagementBundle\Repository\PermissionRepository'
    tags: [ 'security.voter' ]

  # Event listeners
  ItechWorld\UserManagementBundle\EventListener\UserGroupSyncListener:
    tags:
      - { name: 'doctrine.event_listener', event: 'preUpdate' }

  # Commands
  ItechWorld\UserManagementBundle\Command\CreateUsersCommand:
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@security.user_password_hasher'
      - '@ItechWorld\UserManagementBundle\Repository\UserRepository'
    tags:
      - { name: 'console.command' }

  ItechWorld\UserManagementBundle\Command\InitGroupsCommand:
    arguments:
      - '@doctrine.orm.entity_manager'
      - '@ItechWorld\UserManagementBundle\Repository\GroupRepository'
      - '@ItechWorld\UserManagementBundle\Repository\PermissionRepository'
    tags:
      - { name: 'console.command' }

  ItechWorld\UserManagementBundle\Command\InitPermissionsCommand:
    arguments:
      - '@doctrine.orm.entity_manager'
    tags:
      - { name: 'console.command' }

  ItechWorld\UserManagementBundle\Command\SyncUserGroupRolesCommand:
    arguments:
      - '@doctrine.orm.entity_manager'
    tags:
      - { name: 'console.command' }

  # Filtres API Platform
  ItechWorld\UserManagementBundle\Filter\GlobalSearchFilter:
    arguments:
      $nameConverter: '@?api_platform.name_converter'
      $logger: '@?logger'
    tags: [ 'api_platform.filter' ]

  # Event subscribers
  ItechWorld\UserManagementBundle\EventSubscriber\SwaggerSubscriber:
    tags:
      - { name: kernel.event_subscriber }

  # OpenAPI factory decoration
  ItechWorld\UserManagementBundle\OpenApi\OpenApiFactory:
    decorates: 'api_platform.openapi.factory'
    arguments: [ '@.inner' ]
    autoconfigure: false
